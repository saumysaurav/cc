def find_substring_t(s):
    n = len(s)
    lps = [0] * n  # Initialize the longest prefix-suffix array
    length = 0  # Length of the current longest prefix-suffix

    # Calculate the longest prefix-suffix for the given string
    i = 1
    while i < n:
        if s[i] == s[length]:
            length += 1
            lps[i] = length
            i += 1
        else:
            if length:
                length = lps[length - 1]
            else:
                lps[i] = 0
                i += 1

    # Check if there is a non-empty common prefix-suffix
    if lps[n - 1] > 0:
        common = s[:lps[n - 1]]
        # Check if the common substring is not equal to the entire string
        if common != s:
            return common

    # Check for a common prefix-suffix of length less than the length of the string
    if lps[n - 1] > 0:
        common = s[:lps[lps[n - 1] - 1]]
        return common

    return "Just a legend"

# Get user input for the string
s = input("Enter a string: ")

result = find_substring_t(s)
print(result)
